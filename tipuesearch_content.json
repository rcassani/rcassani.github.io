<<<<<<< HEAD
{"pages":[{"url":"/pages/about-me","text":"Hello, My name is Raymundo Cassani , (Ray works perfectly for me). Currently, I'm a PhD candidate in Montréal, Canada. While my academic background is in electrical engineering, specifically telecommunications and electronics. I'm a person who finds enjoyment in repairing and / or modifying stuff. I love to learn a bit of everything, my bet is that a bit of everything more better that everything of a bit. Some of my interests are data visualization, maps, beavers, videogames, science fiction, karate, etc. The principal goal of this blog, is: Share some of my work and experiences, walkthroughs, dilemmas or solutions to problems (with software, hardware, methods, etc.) I've encountered and expended a significant amount of time on them; hopefully this may serve as timesaver and inspiration to others (including a future-me). Hope you enjoy it as much as I enjoy to write on it. Why CastorisCausa.com? From Latin Castoris (or related to the beaver) and Causa (cause), then roughly: \"For the sake of the beaver\" . The beaver, its nature and behavior have always evoked my admiration and sympathy; being a semi-aquatic animal, it gets the best of two worlds. The beaver is the vivid description of hard work, dexterity and ingenuity. Not surprisingly, it has been taken as mascot by several engineering schools around the world. Feedback, suggestions, complains, leave a comment in the respective post or drop me a line:","tags":"Page","title":"About"},{"url":"/posts/linux-usb-uefi","text":"This post is about creating a UEFI -bootable full Linux installation in a USB Flash Drive or External HDD . For sake of simplicity, I'll refer to a USB (Flash Drive / External HDD ) as USB -disk . This procedure is performed in a computer running Windows without installing Linux in the HDD , nor modifying (messing with) the Windows EFI partition. Here a nice explanation on how UEFI boot works . First of all, if you're looking for Live- USB with or without Persistence with both Legacy and UEFI boot, a nice option in Windows is LinuxLive USB Creator . These are the differences between Live- USB with Persistence and a USB Full Install Process Big Picture The procedure comprehends three main parts: 1. Creating UEFI -booting Virtual Machine, without (virtual) HHD 2. Installing Linux in USB -disk 3. Modifying the EFI partition in the USB -disk Requirements VMware installed The Workstation Player version is free for non-commercial use USB -disk , USB3 if your computer supports it I've tried the procedure with both USB Flash Drive and External HDD ISO image of your favorite Linux distribution For the following steps an ISO image of Linux Mint 18.1 64-bit was used, similar instructions should apply for other distributions Procedure: 1. Creating UEFI -booting Virtual Machine, without (virtual) HHD Open VMware and Create a New Virtual Machine Select the I will install the operative system later option. Click on Next Set Guest Operating System to Linux, select your version or the closest one, in my case the closest to Mint 64-bit is Ubuntu 64-bit . Click on Next Assign a name and location to the Virtual Machine. Click on Next Disk Capacity , default parameters (this HDD will not be used). Click Next Click on Customize Hardware For the New CD / DVD ( SATA ) , Select Use ISO image file and browe for your Linux ISO image For the USB Controller , Select USB 3.0 (if supported), [X]Automatically …, [ ]Show all… and [ ]Share Bluetooth… Before completing the wizard, identify the Location of the Virtual Machine. Click on Finish . Do not power ON the Virtual Machine yet. Go to the Virtual Machine Location , and with help of a text editor (e.g. Notepad), open the file VMname.vmx and add the line firmware = \"efi\" at the end of the file In VMware , open the settings of your brand new Virtual Machine and remove the HDD 2. Installing Linux in USB -disk In the step, the Virtual Machine will boot in UEFI using the Linux ISO image, from there it'll possible to install Linux in the USB -disk. 1. In VMware , Power ON the Virtual Machine. When booting on UEFI , it should look as below (at least for Mint 64-bit ) 2. Select Start Linux … image 3. Once the Linux session is started, connect (physically) your USB -disk, and be sure it's connected to the Virtual Machine 4. To start the procedure with a blank USB -disk. In the Virtual Machine, Open GParted (hopefully is installed). Then select your device at the upper right corner (remember its sdx ), then go to Device > Create Partition Table , select the type gtp . Close GParted. 5. Click on the Install Linux (Mint) icon on Desktop. 1. Select your language. 2. Leave unchecked the option Install third-party software… 3. In Installation type select Erase disk and install Linux Mint 5. One the installation is done, select Continue Testing 3. Modifying the EFI partition in the USB -disk Still in the Linux session from the previous section, the resting part is to prepare the EFI partition on the USB -disk to make it UEFI -bootable 1. Create a folder /mnt/efi/ :::powershell $ sudo mkdir /mnt/efi/ Mount the EFI partition in the recently created folder. Change sdx for the corresponding to your USB -disk (step 4 in previous section) $ sudo mount / dev / sdx1 / mnt / efi $ cd / mnt / efi / EFI Copy the ubuntu folder to the same location with the name BOOT $ sudo cp -r ./ ubuntu / ./ BOOT / Finally, copy the file BOOTx64.EFI from to the Linux ISO image to the BOOT folder in EFI partition of the USB -disk $ sudo cp / media / cdrom / EFI / BOOT / BOOTx64 . EFI ./ BOOT / Shut down the Virtual Machine Congratulations, now your USB -disk should be UEFI -bootable The only thing left is to reboot your computer, and select the USB -disk (Partition 1) for UEFI boot. I've try this method using an external SSD via USB and a Lexar USB flash drive without issues.","tags":"Blog","title":"Full Linux installation in USB , supporting UEFI -boot"},{"url":"/posts/touchpad-disable","text":"Touchpads in laptops are not for everyone, one of the first things to do when a I get a new computer is to plug a mouse and disable the touchpad ( TP ). Few weeks ago, I noticed a strange behavior, in my laptop , every time I started a session in Windows, the touchpad was enabled , that is to say it did not keep its previous status. The touchpad is a Synaptics SMBus TouchPad . As this behavior was annoying , something needed to be done. After some research I came across this wonderful solution where the touchpad is automatically disabled when a mouse is detected . Unfortunately, the Steelseris Keyboard in my laptop is detected as keyboard-mouse combo , then, the auto-disable, would permanently disable the touchpad, without option to enable it and who knows it could be useful (someday). Touchpad and Keyboard in GE62VR Later, after diving in Windows Register , with Regedit, I noticed a value, in two keys, that controls the touchpad's behavior at the beginning of the Windows session: DisableDeviceUntilSessionEnd in HKEY_CURRENT_USER\\SOFTWARE\\Synaptics\\SynTP\\TouchPadPS2TM3163 HKEY_CURRENT_USER\\SOFTWARE\\Synaptics\\SynTP\\TouchPadSMB2cTM3163 Basically, when they are 0 the touchpad remembers its state at the moment of the last logout, and when 1 , the touchpad will be enabled every login. Changing the values from 1 to 0 was the solution, to keep the touchpad disable. In case you're want to the same re-enabling behaviour in the touchpad, edit the above-mentioned values in the Registry. You can learn the basics on editing the Windows Registry here: Learn How to Use the Windows Registry Editor (Regedit) in One Easy Lesson .","tags":"Blog","title":"Keeping Synaptics Touchpad disabled"},{"url":"/posts/poshbash-windows-bash","text":"The posh-git-bash prompt, for Git , is a useful tool that shows information about the current status of a local Git repository respect to local and remote (e.g. GitHub ) repositories; in this way, it's easy to see if the repository is ahead or behind, has uncommitted changes, is up-to-date, etc. Git-Posh example The posh-git-bash prompt is included in the PowerShell installed with GitHub Desktop software for Windows. This post describes how add the posh-git-bash prompt functionality into the Bash on Windows10 . If Bash on Windows is not already installed, this is the installation guide . Note : Enable Copy/Paste in Bash Right click in the Window Title bar > Properties Enable Quick Edit Mode Copy is Ctrl-C and Paste is Right-click Adding posh-git-bash prompt to Bash on Windows Run Bash and go to HOME directory in bash $ cd ~ Download the file git-prompt.sh from this repository , and rename it as .git-prompt.sh ~$ wget https : // raw . githubusercontent . com / lyze / posh-git-sh / master / git-prompt . sh -O . git-prompt . sh Now you need to edit your the file ~/.bashrc Add the following 2 lines at the beginning of ~/.bashrc file , you can use the text editors nano or vim for this. source ~/. git-prompt . sh PROMPT_COMMAND = '__posh_git_ps1 \"\\u@\\h:\\w\" \"\\\\\\$ \";' $PROMPT_COMMAND Restart Bash","tags":"Blog","title":"poshbash in Windows bash"},{"url":"/posts/first-post","text":"At the moment, this text is a test for: Metadata required in the Post file Post in more than one language Post in Español: http://www.castoriscausa.com/first-post-spa","tags":"Blog","title":"First post"},{"url":"/posts/first-post-spa","text":"Por el moment, este texto es una prueba de: Metadata necesaria para en archivo del post Publicar un post con más de un idioma Post en English: http://www.castoriscausa.com/first-post","tags":"Blog","title":"Primer post"}]}
=======
{"pages":[{"url":"/pages/about-me","text":"About me What a moment to be alive!","tags":"About MyCat","title":"About"},{"url":"/pages/main","text":"About Main What a moment to be alive!","tags":"About MyCat","title":"Main"},{"url":"/pages/swarro","text":"About SW What a moment to be alive!","tags":"MyCat","title":"sofware"},{"url":"/posts/poshbash-windows-bash","text":"The posh-git-bash prompt, for Git , is a useful tool that shows information about the current status of a local Git repository respect to local and remote (e.g. GitHub ) repositories; in this ways, it's easy to see if the repository is ahead or behind, has uncommitted changes, is up-to-date, etc. Git-Posh example The posh-git-bash prompt is included in the PowerShell installed with GitHub Desktop software for Windows. This post describes how add the posh-git-bash prompt functionality into the Bash on Windows10 . If Bash on Windows is not already installed, this is the installation guide . Note : Enable Copy/Paste in Bash Right click in the Window Title bar > Properties Enable Quick Edit Mode Copy is Ctrl-C and Paste is Right click Adding posh-git-bash prompt to Bash on Windows Run Bash and go to HOME directory in bash python print ( algo ) print ( something ) $ cd ~ There are two ways to specify the identifier: print(algo) :::python print(\"The triple-colon syntax will *not* show line numbers.\") To display line numbers, use a path-less shebang instead of colons: 1 print ( \"The path-less shebang syntax *will* show line numbers.\" ) Get the git-prompt.sh file from this repository , and rename it as .git-prompt.sh [code language=\"bash\"] ~$ wget https://raw.githubusercontent.com/lyze/posh-git-sh/master/git-prompt.sh -O .git-prompt.sh [/code] Now you need to edit your the file ~/.bashrc Add the following 3 lines at the beginning of ~/.bashrc file , you can use the text editors nano or vim for this. [code language=\"bash\"] Added to see the current branch in your prompt, posh-git style source ~/.git-prompt.sh PROMPT_COMMAND='__posh_git_ps1 \"\\u@\\h:\\w\" \"\\$ \";'$PROMPT_COMMAND [/code] Restart Bash","tags":"Blog","title":"poshbash in Windows bash"},{"url":"/posts/my-first-post","text":"This text is probe that everything is working as it should\\ Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.","tags":"Blog","title":"First post"},{"url":"/posts/my-first-post-spa","text":"Este texto es una prueba de que todo funciona como debería","tags":"Blog","title":"Primer post"}]}
>>>>>>> b10376d6d2fcb98c8012ec4b6cc6f3c1e0089280
